name: LaTeX Compiler

on:
  push:
    paths: ['**.tex', '**.bib', '**.cls', '**.sty', '**.yml', '**.yaml']
  workflow_dispatch:

jobs:
  compile:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Cache TeX Live
      id: cache
      uses: actions/cache@v4
      with:
        path: ~/texlive
        key: texlive-user-install-v1
    
    - name: Install TeX Live to user directory
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        echo "Installing TeX Live to ~/texlive..."
        
        # Create installation directory
        mkdir -p ~/texlive-temp
        cd ~/texlive-temp
        
        # Download installer
        wget -q http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz
        tar -xzf install-tl-unx.tar.gz
        
        # Find and enter installer directory
        INSTALL_DIR=$(find . -name "install-tl-2*" -type d | head -1)
        cd "$INSTALL_DIR"
        
        # Create installation profile for user directory
        cat > texlive.profile << 'EOF'
        selected_scheme scheme-basic
        TEXDIR ~/texlive/2023
        TEXMFCONFIG ~/texlive/2023/texmf-config
        TEXMFHOME ~/texlive/2023/texmf
        TEXMFLOCAL ~/texlive/2023/texmf-local
        TEXMFSYSCONFIG ~/texlive/2023/texmf-config
        TEXMFSYSVAR ~/texlive/2023/texmf-var
        TEXMFVAR ~/texlive/2023/texmf-var
        option_adjustrepo 1
        option_autobackup 1
        option_desktop_integration 0
        option_doc 0
        option_file_assocs 0
        option_fmt 1
        option_letter 0
        option_menu_integration 0
        option_path 0
        option_post_code 1
        option_src 0
        option_sys_bin ~/texlive/2023/bin
        option_sys_info ~/texlive/2023/share/info
        option_sys_man ~/texlive/2023/share/man
        option_w32_multi_user 0
        EOF
        
        # Install to user directory (no sudo needed)
        ./install-tl -profile texlive.profile
        
        # Install commonly needed packages that aren't in basic scheme
        ~/texlive/2023/bin/x86_64-linux/tlmgr install \
          mathtools booktabs array longtable multirow \
          fancyhdr hyperref xcolor listings algorithm \
          algorithmicx algpseudocode subcaption float \
          wrapfig lipsum
        
        echo "TeX Live installed to user directory!"
    
    - name: Setup TeX Live PATH
      run: |
        # Add TeX Live to PATH
        echo "$HOME/texlive/2023/bin/x86_64-linux" >> $GITHUB_PATH
        
        # Verify installation
        export PATH="$HOME/texlive/2023/bin/x86_64-linux:$PATH"
        which pdflatex
        pdflatex --version
        
        echo "Cache hit: ${{ steps.cache.outputs.cache-hit }}"
        if [ "${{ steps.cache.outputs.cache-hit }}" = "true" ]; then
          echo "Using cached TeX Live installation!"
        else
          echo "Fresh TeX Live installation completed!"
        fi
    
    - name: Verify and install missing packages
      run: |
        export PATH="$HOME/texlive/2023/bin/x86_64-linux:$PATH"
        
        echo "Checking for required packages..."
        
        # Comprehensive package map for mathematics, graphics, 3D, and more
        declare -A PACKAGE_MAP=(
          # Basic document structure
          ["geometry"]="geometry"
          ["setspace"]="setspace"
          ["fancyhdr"]="fancyhdr"
          ["titling"]="titling"
          ["abstract"]="abstract"
          ["appendix"]="appendix"
          ["footmisc"]="footmisc"
          ["parskip"]="parskip"
          
          # Mathematics packages
          ["mathtools"]="mathtools"
          ["amsmath"]="amsmath"
          ["amssymb"]="amsfonts"
          ["amsfonts"]="amsfonts"
          ["amsthm"]="amsthm"
          ["bm"]="bm"
          ["cancel"]="cancel"
          ["cases"]="cases"
          ["commath"]="commath"
          ["empheq"]="empheq"
          ["esint"]="esint"
          ["extarrows"]="extarrows"
          ["gensymb"]="gensymb"
          ["icomma"]="icomma"
          ["mathrsfs"]="mathrsfs"
          ["mathtools"]="mathtools"
          ["nccmath"]="nccmath"
          ["physics"]="physics"
          ["siunitx"]="siunitx"
          ["systeme"]="systeme"
          ["thmtools"]="thmtools"
          ["xfrac"]="xfrac"
          
          # Tables and arrays
          ["array"]="tools"
          ["booktabs"]="booktabs"
          ["longtable"]="tools"
          ["multirow"]="multirow"
          ["multicol"]="tools"
          ["tabu"]="tabu"
          ["tabularx"]="tools"
          ["tabulary"]="tools"
          ["threeparttable"]="threeparttable"
          ["xltabular"]="xltabular"
          
          # Graphics and colors
          ["graphicx"]="graphics"
          ["xcolor"]="xcolor"
          ["color"]="graphics"
          ["colortbl"]="colortbl"
          ["tikz"]="pgf"
          ["pgf"]="pgf"
          ["pgfplots"]="pgfplots"
          ["pstricks"]="pstricks"
          ["pst-node"]="pst-node"
          ["pst-plot"]="pst-plot"
          ["pst-3dplot"]="pst-3dplot"
          ["pst-solides3d"]="pst-solides3d"
          ["adjustbox"]="adjustbox"
          ["caption"]="caption"
          ["subcaption"]="caption"
          ["float"]="float"
          ["wrapfig"]="wrapfig"
          ["rotating"]="rotating"
          ["sidecap"]="sidecap"
          ["transparent"]="transparent"
          
          # 3D and technical drawing
          ["asymptote"]="asymptote"
          ["tikz-3dplot"]="tikz-3dplot"
          ["tkz-euclide"]="tkz-euclide"
          ["tkz-graph"]="tkz-graph"
          ["circuitikz"]="circuitikz"
          ["forest"]="forest"
          
          # Algorithms and code listings
          ["algorithm"]="algorithms"
          ["algorithmic"]="algorithms"
          ["algorithmicx"]="algorithmicx"
          ["algpseudocode"]="algorithmicx"
          ["listings"]="listings"
          ["minted"]="minted"
          ["python"]="python"
          ["matlab-prettifier"]="matlab-prettifier"
          
          # References and citations
          ["hyperref"]="hyperref"
          ["url"]="url"
          ["breakurl"]="breakurl"
          ["natbib"]="natbib"
          ["biblatex"]="biblatex"
          ["csquotes"]="csquotes"
          ["cleveref"]="cleveref"
          ["varioref"]="varioref"
          ["fancyref"]="fancyref"
          
          # Fonts and text formatting
          ["fontenc"]="fonts-tlwg"
          ["inputenc"]="inputenc"
          ["fontspec"]="fontspec"
          ["unicode-math"]="unicode-math"
          ["mathdesign"]="mathdesign"
          ["mathpazo"]="mathpazo"
          ["mathptmx"]="mathptmx"
          ["newtx"]="newtx"
          ["newpx"]="newpx"
          ["libertine"]="libertine"
          ["inconsolata"]="inconsolata"
          ["fourier"]="fourier"
          ["arev"]="arev"
          ["cmbright"]="cmbright"
          ["concmath"]="concmath"
          ["eulervm"]="eulervm"
          ["kpfonts"]="kpfonts"
          ["lmodern"]="lmodern"
          ["palatino"]="palatino"
          ["times"]="psnfss"
          ["helvet"]="psnfss"
          ["courier"]="psnfss"
          ["charter"]="charter"
          ["mathalpha"]="mathalpha"
          
          # Internationalization and languages
          ["babel"]="babel"
          ["polyglossia"]="polyglossia"
          ["csquotes"]="csquotes"
          ["hyphenat"]="hyphenat"
          
          # Utilities and miscellaneous
          ["enumitem"]="enumitem"
          ["enumerate"]="tools"
          ["etoolbox"]="etoolbox"
          ["ifthen"]="ifthen"
          ["keyval"]="keyval"
          ["lastpage"]="lastpage"
          ["lipsum"]="lipsum"
          ["microtype"]="microtype"
          ["paralist"]="paralist"
          ["pdfpages"]="pdfpages"
          ["soul"]="soul"
          ["tocbibind"]="tocbibind"
          ["tocloft"]="tocloft"
          ["todo"]="todo"
          ["ulem"]="ulem"
          ["xspace"]="xspace"
          ["zref"]="zref"
          
          # Advanced mathematics and specialized packages
          ["breqn"]="breqn"
          ["mathdots"]="mathdots"
          ["steinmetz"]="steinmetz"
          ["trfsigns"]="trfsigns"
          ["witharrows"]="witharrows"
          ["young"]="young"
          ["youngtab"]="youngtab"
          
          # Statistics and data analysis
          ["pgfplotstable"]="pgfplotstable"
          ["siunitx"]="siunitx"
          ["datatool"]="datatool"
          ["spreadtab"]="spreadtab"
          
          # Chemistry and physics
          ["chemmacros"]="chemmacros"
          ["mhchem"]="mhchem"
          ["chemfig"]="chemfig"
          ["chemformula"]="chemformula"
          ["chemscheme"]="chemscheme"
          
          # Linguistics
          ["gb4e"]="gb4e"
          ["cgloss4e"]="cgloss4e"
          ["qtree"]="qtree"
          ["forest"]="forest"
          ["expex"]="expex"
          
          # Music notation
          ["musixtex"]="musixtex"
          ["pmx"]="pmx"
          
          # Chess and games
          ["skak"]="skak"
          ["xskak"]="xskak"
          ["chessboard"]="chessboard"
          ["chessfss"]="chessfss"
        )
        
        MISSING_PACKAGES=()
        
        # Check each package
        for package in "${!PACKAGE_MAP[@]}"; do
          if ! kpsewhich ${package}.sty >/dev/null 2>&1; then
            repo_package="${PACKAGE_MAP[$package]}"
            if [[ ! " ${MISSING_PACKAGES[@]} " =~ " ${repo_package} " ]]; then
              echo "Missing package: $package (will install: $repo_package)"
              MISSING_PACKAGES+=("$repo_package")
            fi
          else
            echo "Found package: $package"
          fi
        done
        
        # Install missing packages if any
        if [ ${#MISSING_PACKAGES[@]} -gt 0 ]; then
          echo "Installing missing packages: ${MISSING_PACKAGES[*]}"
          ~/texlive/2023/bin/x86_64-linux/tlmgr install "${MISSING_PACKAGES[@]}" || {
                echo "Some packages failed to install, but continuing..."
                # Try installing packages one by one to avoid complete failure
                for pkg in "${MISSING_PACKAGES[@]}"; do
                    echo "Attempting to install: $pkg"
                    ~/texlive/2023/bin/x86_64-linux/tlmgr install "$pkg" || echo "Failed to install $pkg"
                done
            }
          echo "Package installation completed!"
        else
          echo "All required packages are already installed!"
        fi
        
    - name: Compile LaTeX
      run: |
        export PATH="$HOME/texlive/2023/bin/x86_64-linux:$PATH"
        
        if [ ! -f "main.tex" ]; then
          echo "Error: main.tex not found!"
          exit 1
        fi
        
        echo "Compiling main.tex..."
        pdflatex -interaction=nonstopmode main.tex || true
        
        if [ -f "main.pdf" ]; then
          echo "Compilation successful!"
          ls -la main.pdf
        else
          echo "Compilation failed"
          cat main.log
          exit 1
        fi
    
    - name: Commit PDF
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "LaTeX Compiler"
        
        git add main.pdf
        
        if ! git diff --staged --quiet; then
          git commit -m "Auto-compile LaTeX: $(date '+%Y-%m-%d %H:%M:%S')"
          git push
          echo "PDF committed successfully!"
        else
          echo "No changes to commit"
        fi
