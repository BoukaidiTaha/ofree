name: LaTeX Compiler

on:
  push:
    paths: ['**.tex', '**.bib', '**.cls', '**.sty', '**.yml', '**.yaml']
  workflow_dispatch:

jobs:
  compile:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Cache TeX Live
      id: cache
      uses: actions/cache@v4
      with:
        path: ~/texlive
        key: texlive-user-install-v1
    
    - name: Install TeX Live to user directory
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        echo "Installing TeX Live to ~/texlive..."
        
        # Create installation directory
        mkdir -p ~/texlive-temp
        cd ~/texlive-temp
        
        # Download installer
        wget -q http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz
        tar -xzf install-tl-unx.tar.gz
        
        # Find and enter installer directory
        INSTALL_DIR=$(find . -name "install-tl-2*" -type d | head -1)
        cd "$INSTALL_DIR"
        
        # Create installation profile for user directory
        cat > texlive.profile << 'EOF'
        selected_scheme scheme-basic
        TEXDIR ~/texlive/2023
        TEXMFCONFIG ~/texlive/2023/texmf-config
        TEXMFHOME ~/texlive/2023/texmf
        TEXMFLOCAL ~/texlive/2023/texmf-local
        TEXMFSYSCONFIG ~/texlive/2023/texmf-config
        TEXMFSYSVAR ~/texlive/2023/texmf-var
        TEXMFVAR ~/texlive/2023/texmf-var
        option_adjustrepo 1
        option_autobackup 1
        option_desktop_integration 0
        option_doc 0
        option_file_assocs 0
        option_fmt 1
        option_letter 0
        option_menu_integration 0
        option_path 0
        option_post_code 1
        option_src 0
        option_sys_bin ~/texlive/2023/bin
        option_sys_info ~/texlive/2023/share/info
        option_sys_man ~/texlive/2023/share/man
        option_w32_multi_user 0
        EOF
        
        # Install to user directory (no sudo needed)
        ./install-tl -profile texlive.profile
        
        # Install commonly needed packages that aren't in basic scheme
        ~/texlive/2023/bin/x86_64-linux/tlmgr install \
          mathtools booktabs array longtable multirow \
          fancyhdr hyperref xcolor listings algorithm \
          algorithmicx algpseudocode subcaption float \
          wrapfig lipsum tikz-3dplot pgf pgfplots \
          amsmath amsfonts amssymb amsthm geometry \
          graphicx babel fontenc inputenc etoolbox
        
        echo "TeX Live installed to user directory!"
    
    - name: Setup TeX Live PATH
      run: |
        # Add TeX Live to PATH
        echo "$HOME/texlive/2023/bin/x86_64-linux" >> $GITHUB_PATH
        
        # Verify installation
        export PATH="$HOME/texlive/2023/bin/x86_64-linux:$PATH"
        which pdflatex
        pdflatex --version
        
        echo "Cache hit: ${{ steps.cache.outputs.cache-hit }}"
        if [ "${{ steps.cache.outputs.cache-hit }}" = "true" ]; then
          echo "Using cached TeX Live installation!"
        else
          echo "Fresh TeX Live installation completed!"
        fi
    
    - name: Verify and install missing packages
      run: |
        export PATH="$HOME/texlive/2023/bin/x86_64-linux:$PATH"
        
        echo "Checking for required packages..."
        
        # List of required packages with correct repository names
        declare -A PACKAGE_MAP=(
          ["mathtools"]="mathtools"
          ["booktabs"]="booktabs" 
          ["array"]="tools"
          ["longtable"]="tools"
          ["multirow"]="multirow"
          ["fancyhdr"]="fancyhdr"
          ["hyperref"]="hyperref"
          ["xcolor"]="xcolor"
          ["listings"]="listings"
          ["algorithm"]="algorithms"
          ["algorithmicx"]="algorithmicx"
          ["algpseudocode"]="algorithmicx"
          ["subcaption"]="caption"
          ["float"]="float"
          ["wrapfig"]="wrapfig"
          ["lipsum"]="lipsum"
          ["multicol"]="tools"
          ["enumerate"]="tools"
          ["tikz"]="pgf"
          ["pgfplots"]="pgfplots"
          ["tikz-3dplot"]="tikz-3dplot"
          ["babel"]="babel"
          ["fontspec"]="fontspec"
          ["polyglossia"]="polyglossia"
          ["bidi"]="bidi"
          ["graphics"]="graphics"
          ["graphicx"]="graphics"
          ["pgfplots"]="pgfplots"
          ["pgfplotstable"]="pgfplots"  # For table operations in pgfplots
          ["tikz-3dplot"]="tikz-3dplot"
          ["tkz-euclide"]="tkz-euclide" # For Euclidean geometry constructions
          ["bm"]="tools"                # For bold math symbols
          ["physics"]="physics"         # For physics notation
          ["siunitx"]="siunitx"         # For SI units formatting
          ["3d"]="pgf"                  # 3D library
          ["calc"]="pgf"                # Calculation library
          ["decorations.pathmorphing"]="pgf" # Path morphing decorations
          ["patterns"]="pgf"            # Pattern library
          ["shapes.arrows"]="pgf"       # Arrow shapes
          ["arrows.meta"]="pgf"         # Advanced arrows
          ["positioning"]="pgf"         # Node positioning
          ["xpatch"]="xpatch"
        )
        
        MISSING_PACKAGES=()
        
        # Check each package
        for package in "${!PACKAGE_MAP[@]}"; do
          if ! kpsewhich ${package}.sty >/dev/null 2>&1; then
            repo_package="${PACKAGE_MAP[$package]}"
            if [[ ! " ${MISSING_PACKAGES[@]} " =~ " ${repo_package} " ]]; then
              echo "Missing package: $package (will install: $repo_package)"
              MISSING_PACKAGES+=("$repo_package")
            fi
          else
            echo "Found package: $package"
          fi
        done
        
        # Install missing packages if any
        if [ ${#MISSING_PACKAGES[@]} -gt 0 ]; then
          echo "Installing missing packages: ${MISSING_PACKAGES[*]}"
          ~/texlive/2023/bin/x86_64-linux/tlmgr install "${MISSING_PACKAGES[@]}" || {
            echo "Some packages failed to install, but continuing..."
            exit 0
          }
          echo "Package installation completed!"
        else
          echo "All required packages are already installed!"
        fi
    
    - name: Compile LaTeX
      run: |
        export PATH="$HOME/texlive/2023/bin/x86_64-linux:$PATH"
        
        if [ ! -f "main.tex" ]; then
          echo "Error: main.tex not found!"
          exit 1
        fi
        
        echo "Compiling main.tex..."
        pdflatex -interaction=nonstopmode main.tex || true
        
        if [ -f "main.pdf" ]; then
          echo "Compilation successful!"
          ls -la main.pdf
        else
          echo "Compilation failed"
          cat main.log
          exit 1
        fi
    
    - name: Commit PDF
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "LaTeX Compiler"
        
        git add main.pdf
        
        if ! git diff --staged --quiet; then
          git commit -m "Auto-compile LaTeX: $(date '+%Y-%m-%d %H:%M:%S')"
          git push
          echo "PDF committed successfully!"
        else
          echo "No changes to commit"
        fi
